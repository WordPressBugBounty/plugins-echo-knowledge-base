(function(){"use strict";if(!window.EPKBChatUtils){console.error("ChatAPIClient: EPKBChatUtils not loaded");return}const{isInvalidNonceError:e,parseErrorResponse:s,generateIdempotencyKey:t,prepareMessage:n,createHeaders:o,createFetchOptions:r}=window.EPKBChatUtils;class i{constructor(e){this.config=e||{};this.baseUrl=this.config.rest_url||"/wp-json";this.restNonce=this.config.rest_nonce||"";this.isAdmin=this.config.isAdmin||false;this.debugMode=this.config.debugMode||false;this.showTechnicalLogs=this.isAdmin||this.debugMode;this.sessionManager=null;this.retryTimeoutRef=null;if(this.showTechnicalLogs){if(!e){console.warn("ChatAPIClient: No configuration provided, using defaults")}if(!this.restNonce){console.warn("ChatAPIClient: No REST nonce provided, authentication may fail")}}}setSessionManager(e){if(!e&&this.showTechnicalLogs){console.warn("Session manager is null or undefined")}this.sessionManager=e}setNonce(e){this.restNonce=e}getNonce(){return this.restNonce}async refreshNonce(e=false){if(!e&&this.restNonce){return this.restNonce}const s=await this.startSession();if(s.success&&s.data.rest_nonce){return s.data.rest_nonce}return this.restNonce}async startSession(){try{const e=await fetch(`${this.baseUrl}epkb/v1/ai-chat/start-session`,r("POST",{},1e4,this.restNonce));if(!e.ok){const t=await e.json().catch((()=>({})));throw s(new Error("Failed to start session"),{status:e.status,data:t},this.isAdmin)}const t=await e.json();if(t.rest_nonce){this.restNonce=t.rest_nonce}return{success:true,data:t}}catch(e){const t=e.type?e:s(e,null,this.isAdmin);if(this.showTechnicalLogs){console.error("Failed to start session:",t)}return{success:false,errorInfo:t}}}async sendMessageWithRetry(e,n=null,o=null,r="1",i=0,a=false,c={}){try{const s=15e3+i*5e3;if(!n){n=t()}const u=await this.sendMessage(e,n,o,r,s);if(!u.success){if(u.invalidNonce&&!a&&c.onInvalidNonce){if(this.showTechnicalLogs){console.log("Invalid nonce detected, refreshing and retrying...")}await c.onInvalidNonce();return this.sendMessageWithRetry(e,n,o,r,i,true,c)}const s=new Error(u.errorInfo?u.errorInfo.finalMessage:"Failed to get response");if(u.errorInfo){s.errorInfo=u.errorInfo;s.code=u.errorInfo.code}throw s}const l=u.data;if(l.new_token&&c.onNewToken){c.onNewToken(l)}if(this.sessionManager){const e=this.sessionManager.updateFromResponse(l);if(e){const e=this.sessionManager.getSessionInfo();if(c.onSessionUpdate){c.onSessionUpdate(e)}}}else{if(this.showTechnicalLogs){console.warn("Session manager not available for update")}}if(c.onSuccess){c.onSuccess(l)}return{success:true,data:l}}catch(t){const u=t.errorInfo||s(t,null,this.isAdmin);if(this.showTechnicalLogs){console.error("Chat error:",u)}if(this.showTechnicalLogs&&u.code){console.log(`Chat error code: ${u.code}, will retry: ${u.isRetryable}`)}const l=u.type==="timeout"?2:3;if(i<l&&u.isRetryable&&!a){const s=Math.pow(2,i)*1e3;if(c.onRetry){c.onRetry(i+1,s)}if(this.retryTimeoutRef){clearTimeout(this.retryTimeoutRef)}return new Promise((t=>{this.retryTimeoutRef=setTimeout((()=>{t(this.sendMessageWithRetry(e,n,o,r,i+1,false,c))}),s)}))}else{if(u.type==="timeout"&&!this.isAdmin&&c.onTimeoutError){c.onTimeoutError(t,u)}if(c.onFinalError){c.onFinalError(t,u)}return{success:false,errorInfo:u}}}}async sendMessage(t,n,o=null,i="1",a=3e4){const c={message:t,idempotency_key:n,widget_id:i};if(o){c.chat_id=o}try{const t=await fetch(`${this.baseUrl}epkb/v1/ai-chat/message`,r("POST",c,a,this.restNonce));const n=await t.json();if(n.new_token){this.restNonce=n.new_token}if(!t.ok){const o=s(new Error(n.message||"Failed to get response"),{status:t.status,data:n},this.isAdmin);return{success:false,invalidNonce:e(t,n),errorInfo:o}}return{success:true,data:n}}catch(e){const t=s(e,null,this.isAdmin);return{success:false,errorInfo:t}}}async loadConversation(t){try{const n=await fetch(`${this.baseUrl}epkb/v1/ai-chat/conversation/${t}`,r("GET",null,1e4,this.restNonce));const o=await n.json();if(o.new_token){this.restNonce=o.new_token}if(!n.ok){const t=s(new Error(o.message||"Failed to load conversation"),{status:n.status,data:o},this.isAdmin);const r={success:false,errorInfo:t,action:"continue",userMessage:null,shouldRetry:false,needsNonceRefresh:false};if(e(n,o)||t.code==="invalid_nonce"){r.needsNonceRefresh=true;r.shouldRetry=true;r.action="refresh_nonce";return r}if(t.code==="conversation_expired"||t.code==="invalid_chat_id"||t.code==="chat_not_found"){r.action="expired";r.userMessage="Your previous conversation has expired. Starting a new conversation...";return r}if(t.code==="invalid_session"||t.code==="session_expired"){r.action="show_error";r.userMessage="Your session has expired. Please refresh the page to continue.";return r}return r}return{success:true,messages:o.messages||[],data:o,action:"success"}}catch(e){const t=s(e,null,this.isAdmin);if(t.type==="network"||t.type==="timeout"){return{success:false,errorInfo:t,action:"continue",userMessage:null}}return{success:false,errorInfo:t,action:"continue",userMessage:null}}}async loadConversationHistoryWithRetry(e,s,t={}){if(!s){return{success:false,error:"Missing chat ID"}}const n=await this.loadConversation(s);if(n.success&&n.messages&&n.messages.length>0){if(this.showTechnicalLogs){console.log("Conversation loaded successfully:",n.messages.length,"messages")}if(t.onSuccess){t.onSuccess(n.messages)}if(n.data&&n.data.new_token&&t.onNewToken){t.onNewToken(n.data)}return{success:true,messages:n.messages}}else if(n.success&&(!n.messages||n.messages.length===0)){if(this.showTechnicalLogs){console.log("No conversation messages found")}return{success:true,messages:[]}}switch(n.action){case"refresh_nonce":if(this.showTechnicalLogs){console.log("Invalid nonce detected when loading conversation, needs refresh")}if(t.onInvalidNonce){await t.onInvalidNonce()}return{success:false,invalidNonce:true};case"expired":if(t.onExpired){t.onExpired(n.userMessage)}return{success:false,expired:true,error:n.userMessage};case"show_error":if(t.onError){t.onError(n.userMessage)}return{success:false,error:n.userMessage};case"continue":default:if(this.showTechnicalLogs&&n.errorInfo){console.log("Error loading conversation:",n.errorInfo.finalMessage)}return{success:false,error:n.errorInfo?n.errorInfo.finalMessage:"Failed to load conversation"}}}async getActiveConversation(){try{const t=await fetch(`${this.baseUrl}epkb/v1/ai-chat/active`,r("GET",null,1e4,this.restNonce));const n=await t.json();if(n.new_token){this.restNonce=n.new_token}if(!t.ok){const o=s(new Error(n.message||"Failed to get active conversation"),{status:t.status,data:n},this.isAdmin);const r={success:false,errorInfo:o,action:"continue",userMessage:null,shouldRetry:false,needsNonceRefresh:false};if(e(t,n)||o.code==="invalid_nonce"){r.needsNonceRefresh=true;r.shouldRetry=true;r.action="refresh_nonce";return r}if(o.code==="invalid_session"||o.code==="session_expired"){r.action="show_error";r.userMessage="Your session has expired. Please refresh the page to continue.";return r}if(o.type==="rate_limit"){const e=o.context&&o.context.retryAfter?o.context.retryAfter:60;r.action="show_error";r.userMessage=`Too many requests. Please try again in ${e} seconds.`;return r}if(o.statusCode>=500){r.action="show_error";r.userMessage="Service temporarily unavailable. Please try again later.";return r}if(o.type==="timeout"||o.type==="network"){r.action="continue";if(this.showTechnicalLogs){console.warn("Network issue when checking active conversation")}return r}return r}return{success:true,data:n,action:"success"}}catch(e){const t=s(e,null,this.isAdmin);if(t.type==="network"||t.type==="timeout"){return{success:false,errorInfo:t,action:"continue",userMessage:null}}return{success:false,errorInfo:t,action:"continue",userMessage:null}}}async clearConversation(){try{const t=await fetch(`${this.baseUrl}epkb/v1/ai-chat/clear`,r("POST",{},1e4,this.restNonce));const n=await t.json();if(n.new_token){this.restNonce=n.new_token}if(!t.ok){const o=s(new Error(n.message||"Failed to clear conversation"),{status:t.status,data:n},this.isAdmin);const r={success:false,errorInfo:o,action:"show_error",userMessage:"Failed to start new conversation. Please try again.",shouldRetry:false,needsNonceRefresh:false};if(e(t,n)||o.code==="invalid_nonce"){r.needsNonceRefresh=true;r.shouldRetry=true;r.action="refresh_nonce";return r}if(o.code==="invalid_session"||o.code==="session_expired"){r.userMessage="Your session has expired. Please refresh the page to continue.";return r}if(o.statusCode>=500){r.userMessage="Service temporarily unavailable. Please try again later.";return r}return r}return{success:true,data:n,action:"success"}}catch(e){const t=s(e,null,this.isAdmin);return{success:false,errorInfo:t,action:"show_error",userMessage:"Failed to start new conversation. Please try again."}}}clearRetries(){if(this.retryTimeoutRef){clearTimeout(this.retryTimeoutRef);this.retryTimeoutRef=null}}}window.EPKBChatAPI={ChatAPIClient:i}})();